
# The app team working on behalf of business unit 0001 (BU001) is looking to create an AKS cluster
# of the app they are creating (Application ID: 0008). They have worked with the organization's
# networking team and have been provisioned a spoke network in which to lay their cluster and
# network-aware external resources into (such as Application Gateway). They took that information
# and added it to their cluster-stamp.json and parameters file.

# They create this resource group to be the parent group for the application
# [This takes less than one minute.]
az group create --name rg-bu0001a0008 --location eastus2

# And then deploy the cluster into it.
# [This takes about 15 minutes.]
az deployment group create --resource-group rg-bu0001a0008 --template-file cluster-stamp.json --parameters "@azuredeploy.parameters.prod.json"

# Get AKS Kubeconfig Credntials
az aks get-credentials -n [cluster-name] -g rg-bu0001a0008 --admin


# The Azure Active Directory Admin team wants to grant access to the new created
# cluster. Initially for AAD Bicycle Contoso Tenant Administrators. Therefore a new
# group is created in the AAD that represents the Kubernetes Cluster Admin Role.
# Later on the AAD Admin team will review the baseline settings of the cluster and
# edit the `aks/security-baseline/cluster-baseline-settings/user-facing-cluster-role-aad-group.yaml`
# to replace the placeholder `replace-with-an-aad-group-object-id-for-k8s-admin-clusterrole`
# with the object id for the recently added AAD group.

# Deploy flux
kubectl create namespace cluster-baseline-settings
kubectl apply -f https://raw.githubusercontent.com/mspnp/reference-architectures/master/aks/secure-baseline/cluster-baseline-settings/flux.yaml
kubectl wait --namespace cluster-baseline-settings \
  --for=condition=ready pod \
  --selector=app.kubernetes.io/name=flux \
  --timeout=90s


